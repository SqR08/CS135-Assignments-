;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname trees) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #t)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Steven Huang (20724105)
;; CS135 Fall 2017
;; Assignment 06, Problem 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define-struct- node (key val left right))
;;A node is a (make-node Num Str BT BT

;;A binary tree (BT) is one of:
;;*empty
;;*Node 

(define exampleBT
(make-node 1 "a"
(make-node 7 "b" empty empty)
(make-node 3 "c" (make-node 7 "d" empty empty) empty)))

;;3a)
;;(height mytree) produces the height of a given
;;binary tree (mytree)
;;height: BT -> Nat
;;Examples:
(check-expect (height empty) 0)
(check-expect (height exampleBT) 3)

(define (height mytree)
  (cond
    [(empty? mytree) 0]
    [else (max (+ 1 (height (node-left mytree)))
               (+ 1 (height (node-right mytree))))]
    ))
     
